{
    "module_imports": ["CVPoint", "MinMaxLocResult"],
    "module_objc_h_code": "src/Core.h.objccode.in",
    "module_objc_mm_code": "src/Core.mm.objccode.in",
    "class_ignore_list" : [
        "FileNode",
        "FileStorage",
        "KDTree",
        "KeyPoint",
        "DMatch"
    ],
    "missing_consts" : {
        "Core" : {
            "private" : [],
            "public" : [
                ["SVD_MODIFY_A", 1], ["SVD_NO_UV", 2], ["SVD_FULL_UV", 4],
                ["FILLED", -1],
                ["REDUCE_SUM", 0], ["REDUCE_AVG", 1], ["REDUCE_MAX", 2], ["REDUCE_MIN", 3]
            ]
        }
    },
    "ManualFuncs" : {
        "Core" : {
            "minMaxLoc" : {
                "declaration" : [
                    "// C++: minMaxLoc(Mat src, double* minVal, double* maxVal=0, Point* minLoc=0, Point* maxLoc=0, InputArray mask=noArray())",
                    "+ (MinMaxLocResult*)minMacLoc:(Mat*)src mask:(nullable Mat*)mask;",
                    "\n",
                    "+ (MinMaxLocResult*)minMacLoc:(Mat*)src;",
                    "\n"
                ],
                "implementation" : [
                    "// C++: minMaxLoc(Mat src, double* minVal, double* maxVal=0, Point* minLoc=0, Point* maxLoc=0, InputArray mask=noArray())",
                    "+ (MinMaxLocResult*)minMacLoc:(Mat*)src mask:(nullable Mat*)mask {",
                    "    double minVal, maxVal;",
                    "    cv::Point minLoc, maxLoc;",
                    "    cv::Mat& rSrc = src.nativeRef;",
                    "    if (mask != nil) {",
                    "        cv::Mat& rMask = mask.nativeRef;",
                    "        cv::minMaxLoc(rSrc, &minVal, &maxVal, &minLoc, &maxLoc, rMask);",
                    "    } else {",
                    "        cv::minMaxLoc(rSrc, &minVal, &maxVal, &minLoc, &maxLoc);",
                    "    }",
                    "    return [[MinMaxLocResult alloc] initWithMinval:minVal maxVal:maxVal minLoc:[CVPoint fromNative:&minLoc] maxLoc:[CVPoint fromNative:&minLoc]];",
                    "}",
                    "\n",
                    "+ (MinMaxLocResult*)minMacLoc:(Mat*)src {",
                    "    return [self minMacLoc:src mask:nil];",
                    "}",
                    "\n"
                ]
            },
            "getVersionMajor"      : {"declaration" : [""], "implementation" : [""] },
            "getVersionMinor"      : {"declaration" : [""], "implementation" : [""] },
            "getVersionRevision"   : {"declaration" : [""], "implementation" : [""] },
            "checkHardwareSupport" : {"declaration" : [""], "implementation" : [""] },
            "setUseOptimized"      : {"declaration" : [""], "implementation" : [""] },
            "useOptimized"         : {"declaration" : [""], "implementation" : [""] }
        }
    },
    "func_arg_fix" : {
        "randu"    : { "low"  : {"ctype" : "double"},
                       "high" : {"ctype" : "double"} },
        "randn"    : { "mean" : {"ctype" : "double"},
                       "stddev" : {"ctype"  : "double"} },
        "inRange"  : { "lowerb" : {"ctype" : "Scalar"},
                       "upperb" : {"ctype" : "Scalar"} },
        "boundingRect"   : { "points" : {"ctype" : "vector_Point"} },
        "hconcat" : { "src" : {"ctype" : "vector_Mat"} },
        "vconcat" : { "src" : {"ctype" : "vector_Mat"} },
        "checkRange" : {"pos" : {"ctype" : "*"} },
        "meanStdDev" : { "mean"   : {"ctype" : "vector_double"},
                         "stddev" : {"ctype" : "vector_double"} },
        "mixChannels" : { "dst" : {"attrib" : []} },
        "(void)divide:(double)scale src2:(Mat*)src2 dst:(Mat*)dst dtype:(int)dtype" : { "src2" : {"name" : "src"} }
    },
    "type_dict" : {
        "Algorithm": {
            "objc_type": "Feature2D*"
        },
        "CvSlice": {
            "objc_type": "Range*"
        },
        "CvTermCriteria": {
            "objc_type": "TermCriteria*",
            "to_cpp": "%(n)s.nativeRef",
            "from_cpp": "[TermCriteria fromNative:%(n)s]"
        },
        "DMatch": {
            "objc_type": "DMatch*"
        },
        "KeyPoint": {
            "objc_type": "KeyPoint*",
            "to_cpp": "%(n)s.nativeRef",
            "from_cpp": "[KeyPoint fromNative:%(n)s]"
        },
        "Mat": {
            "objc_type": "Mat*",
            "to_cpp": "%(n)s.nativeRef",
            "from_cpp": "[Mat fromNative:%(n)s]"
        },
        "Moments": {
            "objc_type": "Moments*"
        },
        "Point": {
            "objc_type": "CVPoint*"
        },
        "Point2d": {
            "objc_type": "CVPoint*"
        },
        "Point2f": {
            "objc_type": "CVPoint*"
        },
        "Point3d": {
            "objc_type": "Point3*"
        },
        "Point3f": {
            "j_type": "Point3*"
        },
        "Point3i": {
            "objc_type": "Point3*"
        },
        "Range": {
            "objc_type": "Range*"
        },
        "Rect": {
            "objc_type": "CVRect*"
        },
        "Rect2d": {
            "objc_type": "Rect2d*"
        },
        "RotatedRect": {
            "objc_type": "RotatedRect*"
        },
        "Scalar": {
            "objc_type": "Scalar*",
            "to_cpp": "%(n)s.nativeRef",
            "from_cpp": "[Scalar fromNative:%(n)s]"
        },
        "Size": {
            "objc_type": "CVSize*"
        },
        "Size2f": {
            "objc_type": "CVSize*"
        },
        "String": {
            "objc_type": "NSString*",
            "to_cpp": "cv::String(%(n)s.UTF8String)",
            "from_cpp": "[NSString stringWithUTF8String:%(n)s.c_str()]"
        },
        "TermCriteria": {
            "objc_type": "TermCriteria*",
            "to_cpp": "%(n)s.nativeRef",
            "from_cpp": "[TermCriteria fromNative:%(n)s]"
        },
        "Vec2d": {
            "objc_type": "NSArray<NSNumber*>*"
        },
        "Vec3d": {
            "objc_type": "NSArray<NSNumber*>*"
        },
        "c_string": {
            "objc_type": "NSString*"
        },
        "size_t": {
            "objc_type": "long"
        },
        "vector_DMatch": {
            "objc_type": "DMatch",
            "v_type": "DMatch"
        },
        "vector_KeyPoint": {
            "objc_type": "KeyPoint*",
            "v_type": "KeyPoint"
        },
        "vector_Mat": {
            "objc_type": "Mat",
            "v_type": "Mat"
        },
        "vector_Point": {
            "objc_type": "CVPoint",
            "v_type": "Point"
        },
        "vector_Point2f": {
            "objc_type": "CVPoint",
            "v_type": "Point"
        },
        "vector_Point3f": {
            "objc_type": "Point3",
            "v_type": "Point3"
        },
        "vector_Point2d": {
            "objc_type": "CVPoint",
            "v_type": "Point"
        },
        "vector_Point3d": {
            "objc_type": "Point3",
            "v_type": "Point3"
        },
        "vector_Point3i": {
            "objc_type": "Point3",
            "v_type": "Point3"
        },
        "vector_Rect": {
            "objc_type": "CVRect",
            "v_type": "Rect"
        },
        "vector_Rect2d": {
            "objc_type": "Rect2d",
            "v_type": "Rect2d"
        },
        "vector_RotatedRect": {
            "objc_type": "RotatedRect",
            "v_type": "RotatedRect"
        },
        "vector_String": {
            "objc_type": "NSString",
            "v_type": "String"
        },
        "vector_Vec4f": {
            "objc_type": "NSNumber*",
            "v_type": "float"
        },
        "vector_Vec4i": {
            "objc_type": "NSNumber*",
            "v_type": "int"
        },
        "vector_Vec6f": {
            "objc_type": "NSNumber*",
            "v_type": "float"
        },
        "vector_char": {
            "objc_type": "ByteVector*",
            "to_cpp": "%(n)s.vector",
            "from_cpp": "[ByteVector fromNative:%(n)s]"
        },
        "vector_double": {
            "objc_type": "DoubleVector*",
            "to_cpp": "%(n)s.vector",
            "from_cpp": "[DoubleVector fromNative:%(n)s]"
        },
        "vector_float": {
            "objc_type": "FloatVector*",
            "to_cpp": "%(n)s.vector",
            "from_cpp": "[FloatVector fromNative:%(n)s]"
        },
        "vector_int": {
            "objc_type": "IntVector*",
            "to_cpp": "%(n)s.vector",
            "from_cpp": "[IntVector fromNative:%(n)s]"
        },
        "vector_uchar": {
            "objc_type": "ByteVector*",
            "to_cpp": "%(n)s.vector",
            "from_cpp": "[ByteVector fromNative:%(n)s]"
        },
        "vector_vector_DMatch": {
            "objc_type": "DMatch*",
            "v_v_type": "DMatch"
        },
        "vector_vector_KeyPoint": {
            "objc_type": "KeyPoint*",
            "v_v_type": "KeyPoint"
        },
        "vector_vector_Point": {
            "objc_type": "CVPoint*",
            "v_v_type": "CVPoint"
        },
        "vector_vector_Point2f": {
            "objc_type": "CVPoint*",
            "v_v_type": "CVPoint"
        },
        "vector_vector_Point3f": {
            "objc_type": "Point3*",
            "v_v_type": "Point3"
        },
        "vector_vector_char": {
            "objc_type": "NSNumber*",
            "v_v_type": "char"
        }
    }
}
